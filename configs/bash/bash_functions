# Custom functions

# HTTP APIs
gi() { 
  curl -L -s https://www.gitignore.io/api/"$@"
}

# Commit and push yadm config changes
cy() {
   yadm add -u
   yadm commit -m "Update configs"
   yadm push
}

weather() {
  curl wttr.in/?2"${1:~Elgin,SC}"
}

mitscheme() {
  rlwrap -r -c -f "$HOME/opt/mit-scheme/mit_scheme_bindings.txt" "$HOME/opt/mit-scheme/src/microcode/scheme" --band "$HOME/opt/mit-scheme/src/lib/runtime.com" "$@"
}

runscheme() {
  echo;
  "$HOME/opt/mit-scheme/src/microcode/scheme"  --band "$HOME/opt/mit-scheme/src/lib/runtime.com"  --quiet < "$1";
  echo
}

# GPG/Hash
showGPGRecipients() {
  gpg --status-fd 1 --list-only $1
}
hashcompare() {
  if [[ $1 == $2 ]]; then echo "Match!"; else echo "No Match!"; fi
}

nicepass() {
  makepasswd --chars="${1:-16}" --string=$(python3 -c "import string,sys; sys.stdout.write(string.ascii_lowercase)")
}

# Utils
cddir() { 
  mkdir -p "$@" && cd "$@"
}

mem() {                                                                                                      
  ps -eo rss,pid,euser,args:100 --sort %mem | grep -v grep | grep -i $@ | awk '{printf $1/1024 "MB"; $1=""; print }'
}

batik-rasterizer() {
  java -jar $HOME/opt/batik-1.8/batik-rasterizer-1.8.jar "$@"
}

# Image optimization tools
# Via Rob W at:
# http://stackoverflow.com/a/19327447
png() {
    pngcrush -brute "$1"{,.} && du -b "$1"{,.}
}
gif() {
    gifsicle -O "$1" -o "$1." && du -b "$1"{,.}
}
jpeg() {
    jpegtran "$1" > "$1." && du -b "$1"{,.}
}

# git
# Fetches files for a given commit
gitfiles() { 
  /usr/bin/git diff-tree --no-commit-id --name-only -r "$@";
}
